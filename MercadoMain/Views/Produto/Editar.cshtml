@using MercadoDominio.Entidades;
@model Produto
@{
    ViewBag.Title = "Editar";
}

<h2>Editar Produto</h2>


@using (Html.BeginForm("Editar", "Produto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Produto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="margin-left:10%">
            <label for="batata">Fabricante: </label>
            <select name="IdFabricante" id="batata" style="margin-left:10px">
                @foreach (var fabricante in (IEnumerable<Fabricante>)ViewBag.Fabricantes)
                {
                    <option value="@fabricante.Id" @(Model.IdFabricante == fabricante.Id ? "selected" : string.Empty)>
                        @fabricante.Nome
                    </option>
                }
            </select><br /><br />
            <label for="batata2">Distribuidor: </label>
            <select name="IdDistribuidor" id="batata2">
                @foreach (var distribuidor in (IEnumerable<Distribuidor>)ViewBag.Distribuidores)
                {
                    <option value="@distribuidor.Id" @(Model.IdDistribuidor == distribuidor.Id ? "selected" : string.Empty)>
                        @distribuidor.Nome
                    </option>
                }
            </select><br /><br />
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div style="margin-left: 10%">
            Foto atual:
            <img style="max-width: 300px; max-height: 300px" src="../../imagens/@ViewBag.Foto" id="fotoAtual"/>
        </div>

        <div class="form-group" style="margin-left: 15%">
            <label for="imagem">Selecione uma nova imagem:</label>

            <span class="input-group-btn" id="imagem" style="width:auto">
                <span class="btn btn-primary btn-file" style="width: auto">
                    <input type="file" single name="uploadImagem" id="campoDeImagem">
                </span>
            </span>
        </div>
        
        <input type="hidden" value="@Model.Imagem" name="Imagem"/>
        
        <button onclick="limpa()" style="margin-left: 15%" value="any" type="button">Limpar imagem</button>
        <br /><br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="enviaForm" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar a lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function limpa() {
            document.getElementById('campoDeImagem').value = "";
        }

        $('#campoDeImagem').change(function() {
            readURL(this);
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    $('#fotoAtual').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $('#enviaForm').click(function() {
            if (!$('#campoDeImagem').val()) {
                //não é possível setar o campo de um input através de código, há não ser que você o defina como uma string vazia
            }
        });

    </script>
}
